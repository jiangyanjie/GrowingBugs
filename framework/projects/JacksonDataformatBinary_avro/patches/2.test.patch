diff --git a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionArrayEvolutionTest.java b/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionArrayEvolutionTest.java
deleted file mode 100644
index a638225c..00000000
--- a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionArrayEvolutionTest.java
+++ /dev/null
@@ -1,80 +0,0 @@
-package com.fasterxml.jackson.dataformat.avro.schemaev;
-
-import com.fasterxml.jackson.dataformat.avro.AvroMapper;
-import com.fasterxml.jackson.dataformat.avro.AvroSchema;
-import com.fasterxml.jackson.dataformat.avro.AvroTestBase;
-
-import java.util.List;
-
-public class UnionArrayEvolutionTest extends AvroTestBase {
-
-    static String SCHEMA_V1_ARRAY_JSON = aposToQuotes("{\n"+
-            " 'namespace':'org.example.testsnippets',\n"+
-            " 'type':'record',\n"+
-            " 'name':'TestDto',\n"+
-            " 'fields':[\n"+
-            "    {\n"+
-            "        'name':'id',\n"+
-            "        'type':['string', 'null']\n"+
-            "    }\n"+
-            " ]\n"+
-            "}\n");
-
-    static String SCHEMA_V2_ARRAY_JSON = aposToQuotes("{\n"+
-            " 'namespace':'org.example.testsnippets',\n"+
-            " 'type':'record',\n"+
-            " 'name':'TestDto',\n"+
-            " 'fields':[\n"+
-            "    {\n"+
-            "        'name':'id',\n"+
-            "        'type':['string', 'null']\n"+
-            "    },\n"+
-            "    {\n"+
-            "        'name':'names',\n"+
-            "        'type':['null', { 'type' :'array', 'items' : 'string'}]\n"+
-            "    }\n"+
-            " ]\n"+
-            "}\n");
-
-    private final AvroMapper MAPPER = getMapper();
-
-    static class V1{
-        public String id;
-
-        public V1(){}
-
-        public V1(String id) {
-            this.id = id;
-        }
-    }
-
-    static class V2 {
-        public String id;
-        public List<String> names;
-
-        public V2(String id, List<String> names) {
-            this.id = id;
-            this.names = names;
-        }
-
-    }
-
-    /*
-    /**********************************************************
-    /* Test methods
-    /**********************************************************
-     */
-
-    public void testRoundtripToOlderCompatibleSchema() throws Exception
-    {
-        final AvroSchema srcSchema = MAPPER.schemaFrom(SCHEMA_V2_ARRAY_JSON);
-        final AvroSchema dstSchema = MAPPER.schemaFrom(SCHEMA_V1_ARRAY_JSON);
-        final AvroSchema xlate = srcSchema.withReaderSchema(dstSchema);
-
-        byte[] avro = MAPPER.writer(srcSchema).writeValueAsBytes(new V2("test", null));
-        V1 result = MAPPER.readerFor(V1.class)
-                .with(xlate)
-                .readValue(avro);
-        assertEquals("test", result.id);
-    }
-}
diff --git a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionMapEvolutionTest.java b/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionMapEvolutionTest.java
deleted file mode 100644
index 858bc070..00000000
--- a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionMapEvolutionTest.java
+++ /dev/null
@@ -1,80 +0,0 @@
-package com.fasterxml.jackson.dataformat.avro.schemaev;
-
-import com.fasterxml.jackson.dataformat.avro.AvroMapper;
-import com.fasterxml.jackson.dataformat.avro.AvroSchema;
-import com.fasterxml.jackson.dataformat.avro.AvroTestBase;
-
-import java.util.Map;
-
-public class UnionMapEvolutionTest extends AvroTestBase {
-
-    static String SCHEMA_V1_ARRAY_JSON = aposToQuotes("{\n"+
-            " 'namespace':'org.example.testsnippets',\n"+
-            " 'type':'record',\n"+
-            " 'name':'TestDto',\n"+
-            " 'fields':[\n"+
-            "    {\n"+
-            "        'name':'id',\n"+
-            "        'type':['string', 'null']\n"+
-            "    }\n"+
-            " ]\n"+
-            "}\n");
-
-    static String SCHEMA_V2_ARRAY_JSON = aposToQuotes("{\n"+
-            " 'namespace':'org.example.testsnippets',\n"+
-            " 'type':'record',\n"+
-            " 'name':'TestDto',\n"+
-            " 'fields':[\n"+
-            "    {\n"+
-            "        'name':'id',\n"+
-            "        'type':['string', 'null']\n"+
-            "    },\n"+
-            "    {\n"+
-            "        'name':'names',\n"+
-            "        'type':['null', { 'type' :'map', 'values' : ['string']}]\n"+
-            "    }\n"+
-            " ]\n"+
-            "}\n");
-
-    private final AvroMapper MAPPER = getMapper();
-
-    static class V1{
-        public String id;
-
-        public V1(){}
-
-        public V1(String id) {
-            this.id = id;
-        }
-    }
-
-    static class V2 {
-        public String id;
-        public Map<String,String> names;
-
-        public V2(String id, Map<String,String> names) {
-            this.id = id;
-            this.names = names;
-        }
-
-    }
-
-    /*
-    /**********************************************************
-    /* Test methods
-    /**********************************************************
-     */
-
-    public void testRoundtripToOlderCompatibleSchema() throws Exception
-    {
-        final AvroSchema srcSchema = MAPPER.schemaFrom(SCHEMA_V2_ARRAY_JSON);
-        final AvroSchema dstSchema = MAPPER.schemaFrom(SCHEMA_V1_ARRAY_JSON);
-        final AvroSchema xlate = srcSchema.withReaderSchema(dstSchema);
-
-        byte[] avro = MAPPER.writer(srcSchema).writeValueAsBytes(new V2("test", null));
-        V1 result = MAPPER.readerFor(V1.class)
-                .with(xlate)
-                .readValue(avro);
-        assertEquals("test", result.id);
-    }
-}
diff --git a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionRecordEvolutionTest.java b/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionRecordEvolutionTest.java
deleted file mode 100644
index 483bf920..00000000
--- a/avro/src/test/java/com/fasterxml/jackson/dataformat/avro/schemaev/UnionRecordEvolutionTest.java
+++ /dev/null
@@ -1,98 +0,0 @@
-package com.fasterxml.jackson.dataformat.avro.schemaev;
-
-import com.fasterxml.jackson.dataformat.avro.AvroMapper;
-import com.fasterxml.jackson.dataformat.avro.AvroSchema;
-import com.fasterxml.jackson.dataformat.avro.AvroTestBase;
-
-public class UnionRecordEvolutionTest extends AvroTestBase {
-
-    static String SCHEMA_V1_ARRAY_JSON = aposToQuotes("{\n" +
-            " 'namespace':'org.example.testsnippets',\n" +
-            " 'type':'record',\n" +
-            " 'name':'TestDto',\n" +
-            " 'fields':[\n" +
-            "    {\n" +
-            "        'name':'id',\n" +
-            "        'type':['string', 'null']\n" +
-            "    }\n" +
-            " ]\n" +
-            "}\n");
-
-    static String SCHEMA_V2_ARRAY_JSON = aposToQuotes("{\n" +
-            " 'namespace':'org.example.testsnippets',\n" +
-            " 'type':'record',\n" +
-            " 'name':'TestDto',\n" +
-            " 'fields':[\n" +
-            "    {\n" +
-            "        'name':'id',\n" +
-            "        'type':['string', 'null']\n" +
-            "    },\n" +
-            "    {\n" +
-            "        'name':'names',\n" +
-            "        'type':['null', \n" +
-            "        { " +
-            "           'type' : 'record', \n" +
-            "           'name' : 'testRecord', \n" +
-            "           'fields' : [\n" +
-            "            {\n" +
-            "               'name': 'firstName',\n" +
-            "               'type': 'string'\n" +
-            "            }] \n" +
-            "         } \n" +
-            "       ]\n" +
-            "    }\n" +
-            " ]\n" +
-            "}\n");
-
-    private final AvroMapper MAPPER = getMapper();
-
-    static class V1 {
-        public String id;
-
-        public V1() {
-        }
-
-        public V1(String id) {
-            this.id = id;
-        }
-    }
-
-    static class V2 {
-        public String id;
-        public Names names;
-
-        public V2(String id, Names names) {
-            this.id = id;
-            this.names = names;
-        }
-
-        private class Names {
-            public String firstName;
-
-            public Names() {
-            }
-
-            public Names(String firstName) {
-                this.firstName = firstName;
-            }
-        }
-    }
-
-    /*
-    /**********************************************************
-    /* Test methods
-    /**********************************************************
-     */
-
-    public void testRoundtripToOlderCompatibleSchema() throws Exception {
-        final AvroSchema srcSchema = MAPPER.schemaFrom(SCHEMA_V2_ARRAY_JSON);
-        final AvroSchema dstSchema = MAPPER.schemaFrom(SCHEMA_V1_ARRAY_JSON);
-        final AvroSchema xlate = srcSchema.withReaderSchema(dstSchema);
-
-        byte[] avro = MAPPER.writer(srcSchema).writeValueAsBytes(new V2("test", null));
-        V1 result = MAPPER.readerFor(V1.class)
-                .with(xlate)
-                .readValue(avro);
-        assertEquals("test", result.id);
-    }
-}
