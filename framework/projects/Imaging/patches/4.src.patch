diff --git a/src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java b/src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java
index 301ac0d..967912e 100644
--- a/src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java
+++ b/src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java
@@ -157,28 +157,18 @@ public class PnmImageParser extends ImageParser {
                 final String type = tokenizer.nextToken();
                 if ("WIDTH".equals(type)) {
                     seenWidth = true;
-                    if(!tokenizer.hasMoreTokens())
-                        throw new ImageReadException("PAM header has no WIDTH value");
                     width = Integer.parseInt(tokenizer.nextToken());
                 } else if ("HEIGHT".equals(type)) {
                     seenHeight = true;
-                    if(!tokenizer.hasMoreTokens())
-                        throw new ImageReadException("PAM header has no HEIGHT value");
                     height = Integer.parseInt(tokenizer.nextToken());
                 } else if ("DEPTH".equals(type)) {
                     seenDepth = true;
-                    if(!tokenizer.hasMoreTokens())
-                        throw new ImageReadException("PAM header has no DEPTH value");
                     depth = Integer.parseInt(tokenizer.nextToken());
                 } else if ("MAXVAL".equals(type)) {
                     seenMaxVal = true;
-                    if(!tokenizer.hasMoreTokens())
-                        throw new ImageReadException("PAM header has no MAXVAL value");
                     maxVal = Integer.parseInt(tokenizer.nextToken());
                 } else if ("TUPLTYPE".equals(type)) {
                     seenTupleType = true;
-                    if(!tokenizer.hasMoreTokens())
-                        throw new ImageReadException("PAM header has no TUPLTYPE value");
                     tupleType.append(tokenizer.nextToken());
                 } else if ("ENDHDR".equals(type)) {
                     break;
