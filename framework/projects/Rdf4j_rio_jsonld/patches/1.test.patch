diff --git a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDParserHandlerTest.java b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDParserHandlerTest.java
index e764e8bc7..991654c16 100644
--- a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDParserHandlerTest.java
+++ b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDParserHandlerTest.java
@@ -7,12 +7,17 @@
  *******************************************************************************/
 package org.eclipse.rdf4j.rio.jsonld;
 
+import java.io.ByteArrayInputStream;
 import java.io.FileInputStream;
 import java.io.InputStream;
-import java.io.OutputStream;
+import java.io.StringWriter;
+import java.nio.charset.StandardCharsets;
 
 import org.eclipse.rdf4j.model.Model;
+import org.eclipse.rdf4j.model.Namespace;
+import org.eclipse.rdf4j.model.Statement;
 import org.eclipse.rdf4j.rio.AbstractParserHandlingTest;
+import org.eclipse.rdf4j.rio.RDFHandlerException;
 import org.eclipse.rdf4j.rio.RDFParser;
 import org.eclipse.rdf4j.rio.RDFWriter;
 
@@ -23,6 +28,26 @@ import org.eclipse.rdf4j.rio.RDFWriter;
  */
 public class JSONLDParserHandlerTest extends AbstractParserHandlingTest {
 
+	@Override
+	protected InputStream getUnknownDatatypeStream(Model unknownDatatypeStatements) throws Exception {
+		return writeJSONLD(unknownDatatypeStatements);
+	}
+
+	@Override
+	protected InputStream getKnownDatatypeStream(Model knownDatatypeStatements) throws Exception {
+		return writeJSONLD(knownDatatypeStatements);
+	}
+
+	@Override
+	protected InputStream getUnknownLanguageStream(Model unknownLanguageStatements) throws Exception {
+		return writeJSONLD(unknownLanguageStatements);
+	}
+
+	@Override
+	protected InputStream getKnownLanguageStream(Model knownLanguageStatements) throws Exception {
+		return writeJSONLD(knownLanguageStatements);
+	}
+
 	@Override
 	protected InputStream getRDFLangStringWithNoLanguageStream(Model model) throws Exception {
 		InputStream RDFLangStringWithNoLanguageStatements = new FileInputStream(
@@ -35,8 +60,29 @@ public class JSONLDParserHandlerTest extends AbstractParserHandlingTest {
 		return new JSONLDParser();
 	}
 
-	@Override
-	protected RDFWriter createWriter(OutputStream output) {
-		return new JSONLDWriter(output);
+	/**
+	 * Helper method to write the given model to JSON-LD and return an InputStream containing the results.
+	 * 
+	 * @param statements
+	 * @return An {@link InputStream} containing the results.
+	 * @throws RDFHandlerException
+	 */
+	private InputStream writeJSONLD(Model statements) throws RDFHandlerException {
+		final StringWriter writer = new StringWriter();
+
+		final RDFWriter jsonldWriter = new JSONLDWriter(writer);
+		jsonldWriter.startRDF();
+		for (final Namespace prefix : statements.getNamespaces()) {
+			jsonldWriter.handleNamespace(prefix.getPrefix(), prefix.getName());
+		}
+		for (final Statement nextStatement : statements) {
+			jsonldWriter.handleStatement(nextStatement);
+		}
+		jsonldWriter.endRDF();
+
+		// System.out.println(writer.toString());
+
+		return new ByteArrayInputStream(writer.toString().getBytes(StandardCharsets.UTF_8));
 	}
+
 }
diff --git a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterBackgroundTest.java b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterBackgroundTest.java
index c95af9611..db22ac420 100644
--- a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterBackgroundTest.java
+++ b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterBackgroundTest.java
@@ -83,8 +83,8 @@ public class JSONLDWriterBackgroundTest extends RDFWriterTest {
 		ByteArrayOutputStream out = new ByteArrayOutputStream();
 		RDFWriter rdfWriter = rdfWriterFactory.getWriter(out);
 		rdfWriter.getWriterConfig().set(JSONLDSettings.JSONLD_MODE, JSONLDMode.COMPACT);
-		rdfWriter.startRDF();
 		rdfWriter.handleNamespace("ex", exNs);
+		rdfWriter.startRDF();
 		rdfWriter.handleStatement(st1);
 		rdfWriter.endRDF();
 
diff --git a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterTest.java b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterTest.java
index 6341f7927..1007f0f7c 100644
--- a/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterTest.java
+++ b/core/rio/jsonld/src/test/java/org/eclipse/rdf4j/rio/jsonld/JSONLDWriterTest.java
@@ -75,9 +75,9 @@ public class JSONLDWriterTest extends RDFWriterTest {
 
 		RDFWriter rdfWriter = rdfWriterFactory.getWriter(w);
 		rdfWriter.getWriterConfig().set(JSONLDSettings.JSONLD_MODE, JSONLDMode.COMPACT);
-		rdfWriter.startRDF();
 		rdfWriter.handleNamespace("", exNs);
 		rdfWriter.handleNamespace(DCTERMS.PREFIX, DCTERMS.NAMESPACE);
+		rdfWriter.startRDF();
 		rdfWriter.handleStatement(vf.createStatement(uri1, DCTERMS.TITLE, vf.createBNode()));
 		rdfWriter.handleStatement(vf.createStatement(uri1, uri2, vf.createBNode()));
 		rdfWriter.endRDF();
@@ -96,8 +96,8 @@ public class JSONLDWriterTest extends RDFWriterTest {
 		ByteArrayOutputStream out = new ByteArrayOutputStream();
 		RDFWriter rdfWriter = rdfWriterFactory.getWriter(out);
 		rdfWriter.getWriterConfig().set(JSONLDSettings.JSONLD_MODE, JSONLDMode.COMPACT);
-		rdfWriter.startRDF();
 		rdfWriter.handleNamespace("ex", exNs);
+		rdfWriter.startRDF();
 		rdfWriter.handleStatement(st1);
 		rdfWriter.endRDF();
 
