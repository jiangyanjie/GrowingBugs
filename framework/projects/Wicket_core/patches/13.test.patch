diff --git a/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapperTest.java b/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapperTest.java
index 544c815555..32fef08964 100644
--- a/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapperTest.java
+++ b/wicket-core/src/test/java/org/apache/wicket/core/request/mapper/AbstractBookmarkableMapperTest.java
@@ -17,17 +17,14 @@
 package org.apache.wicket.core.request.mapper;
 
 import org.apache.wicket.MockPage;
-import org.apache.wicket.Page;
-import org.apache.wicket.RestartResponseAtInterceptPageException;
 import org.apache.wicket.WicketTestCase;
-import org.apache.wicket.authorization.strategies.page.AbstractPageAuthorizationStrategy;
-import org.apache.wicket.mock.MockApplication;
 import org.apache.wicket.protocol.http.PageExpiredException;
-import org.apache.wicket.protocol.http.WebApplication;
+import org.apache.wicket.request.IRequestHandler;
 import org.apache.wicket.request.Request;
 import org.apache.wicket.request.Url;
+import org.apache.wicket.request.component.IRequestablePage;
 import org.apache.wicket.request.mapper.info.PageInfo;
-import org.apache.wicket.util.tester.WicketTesterLazyIsPageStatelessRedirectToBufferTest.EmptyPage;
+import org.apache.wicket.request.mapper.parameter.PageParameters;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -40,34 +37,7 @@ public class AbstractBookmarkableMapperTest extends WicketTestCase
 	private static final int NOT_RENDERED_COUNT = 2;
 	private static final int EXPIRED_ID = 2;
 
-	@Override
-	protected WebApplication newApplication()
-	{
-		return new MockApplication()
-		{
-
-			@Override
-			protected void init()
-			{
-				super.init();
 
-				getSecuritySettings().setAuthorizationStrategy(
-					new AbstractPageAuthorizationStrategy()
-					{
-						@Override
-						protected <T extends Page> boolean isPageAuthorized(Class<T> pageClass)
-						{
-							if (pageClass == EmptyPage.class)
-							{
-								throw new RestartResponseAtInterceptPageException(getHomePage());
-							}
-							return true;
-						}
-					});
-			}
-		};
-	}
-	
 	/**
 	 * <a href="https://issues.apache.org/jira/browse/WICKET-4932">WICKET-4932</a>
 	 */
@@ -79,17 +49,7 @@ public class AbstractBookmarkableMapperTest extends WicketTestCase
 		mapper.processHybrid(new PageInfo(EXPIRED_ID), MockPage.class, null, NOT_RENDERED_COUNT);
 		Assert.fail("it shouldn't process expired pages if the app was flagged to not recreated mounted pages after expiry");
 	}
-	
-	/**
-	 * <a href="https://issues.apache.org/jira/browse/WICKET-5734">WICKET-5734</a>
-	 */
-	@Test
-	public void testProcessHybridWithAuthorizationException() throws Exception
-	{
-		AbstractBookmarkableMapperStub mapper = new AbstractBookmarkableMapperStub();
-		mapper.processHybrid(new PageInfo(), EmptyPage.class, null, 0);
-	}
-	
+
 	/** */
 	public class AbstractBookmarkableMapperStub extends AbstractBookmarkableMapper
 	{
