diff --git a/src/test/java/wstxtest/BaseWstxTest.java b/src/test/java/wstxtest/BaseWstxTest.java
index 8bcb596..8e8bc6f 100644
--- a/src/test/java/wstxtest/BaseWstxTest.java
+++ b/src/test/java/wstxtest/BaseWstxTest.java
@@ -494,45 +494,6 @@ public abstract class BaseWstxTest
         return text;
     }
 
-    /*
-    //////////////////////////////////////////////////
-    // Misc other helpers
-    //////////////////////////////////////////////////
-     */
-
-    protected byte[] utf8Bytes(String str) {
-        // With Java 1.7/7:
-//        return str.getBytes(StandardCharsets.UTF_8);
-        try {
-            return str.getBytes("UTF-8");
-        } catch (UnsupportedEncodingException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    protected byte[] readResource(String ref)
-    {
-       ByteArrayOutputStream bytes = new ByteArrayOutputStream();
-       final byte[] buf = new byte[4000];
-
-       InputStream in = getClass().getResourceAsStream(ref);
-       if (in != null) {
-           try {
-               int len;
-               while ((len = in.read(buf)) > 0) {
-                   bytes.write(buf, 0, len);
-               }
-               in.close();
-           } catch (IOException e) {
-               throw new RuntimeException("Failed to read resource '"+ref+"': "+e);
-           }
-       }
-       if (bytes.size() == 0) {
-           throw new IllegalArgumentException("Failed to read resource '"+ref+"': empty resource?");
-       }
-       return bytes.toByteArray();
-    }
-
     /*
     //////////////////////////////////////////////////
     // Debug/output helpers
@@ -541,11 +502,11 @@ public abstract class BaseWstxTest
 
     public static void warn(String msg)
     {
-        System.err.println("WARN: "+msg);
+	System.err.println("WARN: "+msg);
     }
 
     @SuppressWarnings("cast")
-    public static String printable(char ch)
+	public static String printable(char ch)
     {
         if (ch == '\n') {
             return "\\n";
diff --git a/src/test/java/wstxtest/fuzz/Fuzz32906_CDataReadTest.java b/src/test/java/wstxtest/fuzz/Fuzz32906_CDataReadTest.java
deleted file mode 100644
index dbd3f7d..0000000
--- a/src/test/java/wstxtest/fuzz/Fuzz32906_CDataReadTest.java
+++ /dev/null
@@ -1,66 +0,0 @@
-package wstxtest.fuzz;
-
-import java.io.*;
-
-import javax.xml.stream.*;
-
-import org.codehaus.stax2.io.Stax2ByteArraySource;
-
-import wstxtest.stream.BaseStreamTest;
-
-import com.ctc.wstx.exc.WstxEOFException;
-import com.ctc.wstx.stax.WstxInputFactory;
-
-public class Fuzz32906_CDataReadTest extends BaseStreamTest
-{
-    private final byte[] DOC = readResource("/fuzz/fuzz-32906.xml");
-
-    private final WstxInputFactory STAX_F = getWstxInputFactory();
-    
-    /**
-     * This test case was added after encountering a specific problem, which
-     * only occurs when many attributes were spilled from main hash area....
-     * and that's why exact attribute names do matter.
-     */
-    public void testIssue465InputStream() throws Exception
-    {
-        XMLStreamReader sr = STAX_F.createXMLStreamReader(new ByteArrayInputStream(DOC));
-        try {
-            streamThrough(sr);
-            fail("Should not pass");
-        } catch (WstxEOFException e) {
-            verifyException(e, "Unexpected EOF in CDATA section");
-        }
-        sr.close();
-    }
-    
-    public void testIssue465Reader() throws Exception
-    {
-        // then Reader
-        Reader r = new InputStreamReader(new ByteArrayInputStream(DOC),
-                "UTF-8");
-        XMLStreamReader sr = STAX_F.createXMLStreamReader(r);
-        try {
-            streamThrough(sr);
-            fail("Should not pass");
-        } catch (WstxEOFException e) {
-            verifyException(e, "Unexpected EOF in CDATA section");
-        }
-        sr.close();
-    }
-
-    public void testIssue465Stax2ByteARray() throws Exception
-    {
-        // Then "native" Byte array
-        Stax2ByteArraySource src = new Stax2ByteArraySource(DOC, 0, DOC.length);
-        XMLStreamReader sr = STAX_F.createXMLStreamReader(src);
-        try {
-            streamThrough(sr);
-            fail("Should not pass");
-        } catch (WstxEOFException e) {
-            verifyException(e, "Unexpected EOF in CDATA section");
-        }
-        sr.close();
-    }
-}
-
