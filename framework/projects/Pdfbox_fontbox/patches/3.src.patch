diff --git a/fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java b/fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java
index 657f08389..33046fcaa 100755
--- a/fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java
+++ b/fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java
@@ -35,8 +35,6 @@ import java.util.SortedMap;
 import java.util.SortedSet;
 import java.util.TreeMap;
 import java.util.TreeSet;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
 
 /**
  * Subsetter for TrueType (TTF) fonts.
@@ -48,8 +46,7 @@ import org.apache.commons.logging.LogFactory;
  */
 public final class TTFSubsetter
 {
-    private static final Log LOG = LogFactory.getLog(TTFSubsetter.class);
     
     private static final byte[] PAD_BUF = new byte[] { 0, 0, 0 };
 
     private final TrueTypeFont ttf;
@@ -400,7 +396,7 @@ public final class TTFSubsetter
     private byte[] buildOS2Table() throws IOException
     {
         OS2WindowsMetricsTable os2 = ttf.getOS2Windows();
-        if (os2 == null || uniToGID.isEmpty() || keepTables != null && !keepTables.contains("OS/2"))
+        if (os2 == null || keepTables != null && !keepTables.contains("OS/2"))
         {
             return null;
         }
@@ -686,7 +682,7 @@ public final class TTFSubsetter
 
     private byte[] buildCmapTable() throws IOException
     {
-        if (ttf.getCmap() == null || uniToGID.isEmpty() || keepTables != null && !keepTables.contains("cmap"))
+        if (ttf.getCmap() == null || keepTables != null && !keepTables.contains("cmap"))
         {
             return null;
         }
@@ -951,7 +947,7 @@ public final class TTFSubsetter
     {
         if (glyphIds.isEmpty() || uniToGID.isEmpty())
         {
-            LOG.info("font subset is empty");
+            throw new IllegalStateException("subset is empty");
         }
         
         addCompoundReferences();
