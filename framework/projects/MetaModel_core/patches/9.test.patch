diff --git a/core/src/test/java/org/apache/metamodel/util/FormatHelperTest.java b/core/src/test/java/org/apache/metamodel/util/FormatHelperTest.java
index 469f42b0..80cb23e8 100644
--- a/core/src/test/java/org/apache/metamodel/util/FormatHelperTest.java
+++ b/core/src/test/java/org/apache/metamodel/util/FormatHelperTest.java
@@ -20,10 +20,6 @@ package org.apache.metamodel.util;
 
 import java.text.NumberFormat;
 import java.util.Arrays;
-import java.util.Calendar;
-import java.util.Date;
-import java.util.Locale;
-import java.util.TimeZone;
 
 import org.apache.metamodel.schema.ColumnType;
 
@@ -63,113 +59,4 @@ public class FormatHelperTest extends TestCase {
 				FormatHelper.formatSqlValue(null, new Object[] { "foo", 1,
 						"bar", 0.1234 }));
 	}
-
-    public void testParseTimeSqlValue() throws Exception {
-        final Calendar c = Calendar.getInstance(TimeZone.getDefault(), Locale.getDefault());
-
-        c.setTimeInMillis(0);
-        c.set(Calendar.YEAR, 2011);
-        c.set(Calendar.MONTH, Month.JULY.getCalendarConstant());
-        c.set(Calendar.DAY_OF_MONTH, 24);
-        c.set(Calendar.HOUR_OF_DAY, 17);
-        c.set(Calendar.MINUTE, 34);
-        c.set(Calendar.SECOND, 56);
-        final Date timestampFullSeconds = c.getTime();
-        c.set(Calendar.MILLISECOND, 413);
-        final Date timestampFullMillis = c.getTime();
-
-        c.setTimeInMillis(0);
-        c.set(Calendar.YEAR, 2011);
-        c.set(Calendar.MONTH, Month.JULY.getCalendarConstant());
-        c.set(Calendar.DAY_OF_MONTH, 24);
-        c.set(Calendar.HOUR_OF_DAY, 0);
-        c.set(Calendar.MINUTE, 0);
-        c.set(Calendar.SECOND, 0);
-        final Date dateOnly = c.getTime();
-
-        c.setTimeInMillis(0);
-        c.set(Calendar.YEAR, 1970);
-        c.set(Calendar.MONTH, Calendar.JANUARY);
-        c.set(Calendar.DAY_OF_MONTH, 1);
-        c.set(Calendar.HOUR_OF_DAY, 17);
-        c.set(Calendar.MINUTE, 34);
-        c.set(Calendar.SECOND, 56);
-        final Date timeOnlySeconds = c.getTime();
-        c.set(Calendar.MILLISECOND, 413);
-        final Date timeOnlyMillis = c.getTime();
-
-        // Test parsing of formatted date/time values
-        final String dateStr = FormatHelper.formatSqlValue(ColumnType.DATE, timestampFullSeconds);
-        final Date parsedOnlyDate = FormatHelper.parseSqlTime(ColumnType.DATE, dateStr);
-        assertEquals(dateOnly, parsedOnlyDate);
-
-        final String timeStr = FormatHelper.formatSqlValue(ColumnType.TIME, timestampFullSeconds);
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, timeStr));
-
-        final String timestampStr = FormatHelper.formatSqlValue(ColumnType.TIMESTAMP, timestampFullSeconds);
-        assertEquals(timestampFullSeconds, FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, timestampStr));
-
-        // Now tests some specific cases
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE '2011-07-24'"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE'2011-07-24'"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE \"2011-07-24\""));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE\"2011-07-24\""));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE (2011-07-24)"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "DATE(2011-07-24)"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "2011-07-24"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "'2011-07-24'"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "\"2011-07-24\""));
-
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME '17:34:56'"));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME'17:34:56'"));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME \"17:34:56\""));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME\"17:34:56\""));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME (17:34:56)"));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME(17:34:56)"));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "'17:34:56'"));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "\"17:34:56\""));
-        assertEquals(timeOnlySeconds, FormatHelper.parseSqlTime(ColumnType.TIME, "17:34:56"));
-        assertEquals(timeOnlyMillis, FormatHelper.parseSqlTime(ColumnType.TIME, "TIME '17:34:56.413'"));
-
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP '2011-07-24 17:34:56'"));
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP'2011-07-24 17:34:56'"));
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP \"2011-07-24 17:34:56\""));
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP\"2011-07-24 17:34:56\""));
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP (2011-07-24 17:34:56)"));
-        assertEquals(timestampFullSeconds,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP(2011-07-24 17:34:56)"));
-        assertEquals(timestampFullSeconds, FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "'2011-07-24 17:34:56'"));
-        assertEquals(timestampFullSeconds, FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "\"2011-07-24 17:34:56\""));
-        assertEquals(timestampFullSeconds, FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "2011-07-24 17:34:56"));
-        assertEquals(timestampFullMillis,
-                FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "TIMESTAMP '2011-07-24 17:34:56.413'"));
-        assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.TIMESTAMP, "2011-07-24"));
-
-        try {
-            FormatHelper.parseSqlTime(ColumnType.DATE, "XXX '2011-07-24'");
-            fail("should fail");
-        } catch (IllegalArgumentException e) {
-            // OK
-        }
-
-        try {
-            assertEquals(dateOnly, FormatHelper.parseSqlTime(ColumnType.DATE, "TIME '2011-07-24'"));
-            fail("should fail");
-        } catch (IllegalArgumentException e) {
-            // OK
-        }
-
-        try {
-            assertEquals(timestampFullSeconds,
-                    FormatHelper.parseSqlTime(ColumnType.TIME, "TIMESTAMP '2011-07-24 17:34:56'"));
-            fail("should fail");
-        } catch (IllegalArgumentException e) {
-            // OK
-        }
-    }
 }
\ No newline at end of file
