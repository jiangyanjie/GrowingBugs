diff --git a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
index 22164cd2..ae14a601 100644
--- a/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
+++ b/src/main/java/org/apache/commons/net/ftp/FTPClientConfig.java
@@ -144,14 +144,13 @@ public class FTPClientConfig
      */
     public static final String SYST_UNIX  = "UNIX";
 
     /**
      * Identifier for alternate UNIX parser; same as {@link SYST_UNIX} but leading spaces are
      * trimmed from file names. This is to maintain backwards compatibility with
      * the original behaviour of the parser which ignored multiple spaces between the date
      * and the start of the file name.
      */
-    public static final String SYST_UNIX_TRIM_LEADING  = "UNIX_LTRIM";
 
     /**
      * Identifier by which a vms-based ftp server is known throughout
      * the commons-net ftp system.
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
index 046d7a4e..b9a2b39a 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory.java
@@ -124,11 +124,7 @@ public class DefaultFTPFileEntryParserFactory
             String ukey = key.toUpperCase(java.util.Locale.ENGLISH);
             if (ukey.indexOf(FTPClientConfig.SYST_UNIX) >= 0)
             {
-                parser = new UnixFTPEntryParser(config, false);
-            }
-            else if (ukey.indexOf(FTPClientConfig.SYST_UNIX_TRIM_LEADING) >= 0)
-            {
-                parser = new UnixFTPEntryParser(config, true);
+                parser = new UnixFTPEntryParser(config);
             }
             else if (ukey.indexOf(FTPClientConfig.SYST_VMS) >= 0)
             {
@@ -243,8 +239,7 @@ public class DefaultFTPFileEntryParserFactory
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                    {
                        new NTFTPEntryParser(config),
-                       new UnixFTPEntryParser(config, 
-                               config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
+                       new UnixFTPEntryParser(config)
                    });
         }
     }
@@ -276,8 +271,7 @@ public class DefaultFTPFileEntryParserFactory
             return new CompositeFileEntryParser(new FTPFileEntryParser[]
                 {
                     new OS400FTPEntryParser(config),
-                    new UnixFTPEntryParser(config,
-                            config != null && FTPClientConfig.SYST_UNIX_TRIM_LEADING.equals(config.getServerSystemKey()))
+                    new UnixFTPEntryParser(config)
                 });
         }
     }
diff --git a/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java b/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
index b5b114f3..a476cd0c 100644
--- a/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
+++ b/src/main/java/org/apache/commons/net/ftp/parser/UnixFTPEntryParser.java
@@ -158,7 +158,7 @@ public class UnixFTPEntryParser extends ConfigurableFTPFileEntryParserImpl
      */
     public UnixFTPEntryParser(FTPClientConfig config)
     {
-        this(config, false);
+        this(config, true); // retain original behaviour (for now)
     }
 
     /**
