diff --git a/src/main/java/org/apache/commons/net/util/SubnetUtils.java b/src/main/java/org/apache/commons/net/util/SubnetUtils.java
index 69676ca9..8a999a5b 100644
--- a/src/main/java/org/apache/commons/net/util/SubnetUtils.java
+++ b/src/main/java/org/apache/commons/net/util/SubnetUtils.java
@@ -96,15 +96,9 @@ public class SubnetUtils {
         private int network()       { return network; }
         private int address()       { return address; }
         private int broadcast()     { return broadcast; }

-        private int low() {
-            return (isInclusiveHostCount() ? network() :
-                broadcast() - network() > 1 ? network() + 1 : 0); 
-        }
-        private int high() { 
-            return (isInclusiveHostCount() ? broadcast() :
-                broadcast() - network() > 1 ? broadcast() -1  : 0); 
-        }
+        private int low()           { return network() + (isInclusiveHostCount() ? 0 : 1); }
+        private int high()          { return broadcast() - (isInclusiveHostCount() ? 0 : 1); }
 
         /**
          * Returns true if the parameter <code>address</code> is in the
@@ -124,32 +117,29 @@ public class SubnetUtils {
         public String getNetworkAddress()           { return format(toArray(network())); }
         public String getNetmask()                  { return format(toArray(netmask())); }
         public String getAddress()                  { return format(toArray(address())); }
 
         /**
          * Return the low address as a dotted IP address.
          * Will be zero for CIDR/31 and CIDR/32 if the inclusive flag is false.
          * 
          * @return the IP address in dotted format, may be "0.0.0.0" if there is no valid address
          */
         public String getLowAddress()               { return format(toArray(low())); }
 
         /**
          * Return the high address as a dotted IP address.
          * Will be zero for CIDR/31 and CIDR/32 if the inclusive flag is false.
          * 
          * @return the IP address in dotted format, may be "0.0.0.0" if there is no valid address
          */
         public String getHighAddress()              { return format(toArray(high())); }
         
         /**
          * Get the count of available addresses.
          * Will be zero for CIDR/31 and CIDR/32 if the inclusive flag is false.
          * @return the count of addresses, may be zero.
          */
-        public int getAddressCount()                { 
-            int count = broadcast() - network() + (isInclusiveHostCount() ? 1 : -1);
-            return count < 0 ? 0 : count;
-        }
+        public int getAddressCount()                { return (broadcast() - low() + (isInclusiveHostCount() ? 1 : 0)); }
 
         public int asInteger(String address)        { return toInteger(address); }
 
