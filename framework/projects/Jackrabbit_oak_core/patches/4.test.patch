diff --git a/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java b/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java
index 0cebe87cf7..132c4366a7 100644
--- a/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java
+++ b/oak-core/src/test/java/org/apache/jackrabbit/oak/security/authorization/accesscontrol/ACLTest.java
@@ -135,7 +135,7 @@ public class ACLTest extends AbstractAccessControlListTest implements PrivilegeC
     }
 
     @Test
-    public void testUnknownPrincipal() throws Exception {
+    public void testAddInvalidEntry() throws Exception {
         Principal unknownPrincipal = new InvalidTestPrincipal("unknown");
         try {
             acl.addAccessControlEntry(unknownPrincipal, privilegesFromNames(JCR_READ));
@@ -146,50 +146,9 @@ public class ACLTest extends AbstractAccessControlListTest implements PrivilegeC
     }
 
     @Test
-    public void testInternalPrincipal() throws RepositoryException {
-        Principal internal = new PrincipalImpl("unknown");
-        acl.addAccessControlEntry(internal, privilegesFromNames(JCR_READ));
-    }
-
-    @Test
-    public void testNullPrincipal() throws Exception {
-
-        try {
-            acl.addAccessControlEntry(null, privilegesFromNames(JCR_READ));
-            fail("Adding an ACE with null principal should fail");
-        } catch (AccessControlException e) {
-            // success
-        }
-    }
-
-    @Test
-    public void testEmptyPrincipal() throws Exception {
-
-        try {
-            acl.addAccessControlEntry(new PrincipalImpl(""), privilegesFromNames(JCR_READ));
-            fail("Adding an ACE with empty-named principal should fail");
-        } catch (AccessControlException e) {
-            // success
-        }
-    }
-
-    @Test
-    public void testAddEntriesWithCustomPrincipal()  throws Exception {
-        Principal oakPrincipal = new PrincipalImpl("anonymous");
-        Principal principal = new Principal() {
-            @Override
-            public String getName() {
-                return "anonymous";
-            }
-        };
-
-        assertTrue(acl.addAccessControlEntry(oakPrincipal, privilegesFromNames(JCR_READ)));
-        assertTrue(acl.addAccessControlEntry(principal, privilegesFromNames(JCR_READ_ACCESS_CONTROL)));
-        assertEquals(1, acl.getAccessControlEntries().length);
-
-        assertTrue(acl.addEntry(principal, privilegesFromNames(JCR_READ), false));
-        assertEquals(2, acl.getAccessControlEntries().length);
-        assertArrayEquals(privilegesFromNames(JCR_READ_ACCESS_CONTROL), acl.getAccessControlEntries()[0].getPrivileges());
+    public void testAddEntryWithOakPrincipal() throws Exception {
+        Principal oakPrincipal = new PrincipalImpl("name");
+        acl.addAccessControlEntry(oakPrincipal, privilegesFromNames(JCR_READ));
     }
 
     @Test
