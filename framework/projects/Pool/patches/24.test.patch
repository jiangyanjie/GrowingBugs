diff --git a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
index 0abc55bc..915b4c47 100644
--- a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
+++ b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
@@ -2126,7 +2126,7 @@ public class TestGenericObjectPool extends TestBaseObjectPool {
                 Thread.sleep(_pause);
                 _pool.returnObject(obj);
                 postreturn = System.currentTimeMillis();
-            } catch (final Throwable e) {
+            } catch (final Exception e) {
                 _thrown = e;
             } finally{
                 ended = System.currentTimeMillis();
@@ -2635,79 +2635,6 @@ public class TestGenericObjectPool extends TestBaseObjectPool {
         }
     }
 
-    @Test
-    public void testErrorFactoryDoesNotBlockThreads() throws Exception {
-        final CreateErrorFactory factory = new CreateErrorFactory();
-        try (final GenericObjectPool<String> createFailFactoryPool = new GenericObjectPool<>(factory)) {
-            createFailFactoryPool.setMaxTotal(1);

-            final WaitingTestThread thread1 = new WaitingTestThread(createFailFactoryPool, 0);
-            thread1.start();

-            while (!factory.hasQueuedThreads()) {
-                Thread.sleep(200);
-            }

-            final WaitingTestThread thread2 = new WaitingTestThread(createFailFactoryPool, 0);
-            thread2.start();
-            Thread.sleep(1000);

-            factory.release();
-            factory.release();

-            boolean threadRunning = true;
-            int count = 0;
-            while (threadRunning && count < 15) {
-                threadRunning = thread1.isAlive();
-                threadRunning = thread2.isAlive();
-                Thread.sleep(200);
-                count++;
-            }
-            Assert.assertFalse(thread1.isAlive());
-            Assert.assertFalse(thread2.isAlive());

-            Assert.assertTrue(thread1._thrown instanceof UnknownError);
-            Assert.assertTrue(thread2._thrown instanceof UnknownError);
-        }
-    }

-    private static class CreateErrorFactory extends BasePooledObjectFactory<String> {
-        private final Semaphore semaphore = new Semaphore(0);

-        @Override
-        public String create() throws Exception {
-            semaphore.acquire();
-            throw new UnknownError("wiggle");
-        }

-        @Override
-        public PooledObject<String> wrap(final String obj) {
-            return new DefaultPooledObject<>(obj);
-        }

-        public void release() {
-            semaphore.release();
-        }

-        public boolean hasQueuedThreads() {
-            return semaphore.hasQueuedThreads();
-        }
-    }

 	private BasePooledObjectFactory<String> createBasePooledObjectfactory() {
 		return new BasePooledObjectFactory<String>() {
 			@Override
