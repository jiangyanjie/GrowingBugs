diff --git a/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java b/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
index d1d7abe4..b33f2553 100644
--- a/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
+++ b/src/test/java/org/apache/commons/pool2/impl/TestGenericKeyedObjectPool.java
@@ -1484,26 +1484,6 @@ public class TestGenericKeyedObjectPool extends TestKeyedObjectPool {
         }
         Assert.assertEquals(nIterations, pool.getDestroyedCount());
     }

-    @Test
-    public void testClientWaitStats() throws Exception {
-        SimpleFactory<String> factory = new SimpleFactory<String>();
-        factory.setMakeLatency(100);
-        final GenericKeyedObjectPool<String, String> pool = new GenericKeyedObjectPool<String, String>(
-                factory, new GenericKeyedObjectPoolConfig());
-        String s = pool.borrowObject("one");
-        Assert.assertTrue(pool.getMaxBorrowWaitTimeMillis() >= 100);
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() >= 100);
-        pool.returnObject("one", s);
-        pool.borrowObject("one");
-        Assert.assertTrue(pool.getMaxBorrowWaitTimeMillis() >= 100);
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() < 60);  
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() > 40);  
-    }
 
     /**
      * Attempts to invalidate an object, swallowing IllegalStateException.
@@ -1683,7 +1663,6 @@ public class TestGenericKeyedObjectPool extends TestKeyedObjectPool {
             if (exceptionOnCreate) {
                 throw new Exception();
             }
-            doWait(makeLatency);
             String out = null;
             synchronized(this) {
                 activeCount++;
@@ -1734,9 +1713,6 @@ public class TestGenericKeyedObjectPool extends TestKeyedObjectPool {
         public void setDestroyLatency(long destroyLatency) {
             this.destroyLatency = destroyLatency;
         }
-        public void setMakeLatency(long makeLatency) {
-            this.makeLatency = makeLatency;
-        }
         public void setValidationEnabled(boolean b) {
             enableValidation = b;
         }
@@ -1769,7 +1745,6 @@ public class TestGenericKeyedObjectPool extends TestKeyedObjectPool {
         boolean oddValid = true;
         boolean enableValidation = false;
         long destroyLatency = 0;
-        long makeLatency = 0;
         volatile int maxTotalPerKey = Integer.MAX_VALUE;
         boolean exceptionOnPassivate = false;
         boolean exceptionOnActivate = false;
diff --git a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
index 93daa36b..4ce2e6f7 100644
--- a/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
+++ b/src/test/java/org/apache/commons/pool2/impl/TestGenericObjectPool.java
@@ -2274,26 +2274,6 @@ public class TestGenericObjectPool extends TestBaseObjectPool {
         Assert.assertEquals(0, pool.getNumActive());
         Assert.assertEquals(1, pool.getNumIdle());
     }

-    @Test
-    public void testClientWaitStats() throws Exception {
-        SimpleFactory factory = new SimpleFactory();
-        factory.setMakeLatency(100);
-        final GenericObjectPool<String> pool = new GenericObjectPool<String>(
-                factory, new GenericObjectPoolConfig());
-        String s = pool.borrowObject();
-        Assert.assertTrue(pool.getMaxBorrowWaitTimeMillis() >= 100);
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() >= 100);
-        pool.returnObject(s);
-        pool.borrowObject();
-        Assert.assertTrue(pool.getMaxBorrowWaitTimeMillis() >= 100);
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() < 60);  
-        Assert.assertTrue(pool.getMeanBorrowWaitTimeMillis() > 40);  
-    }
 
     private static final class DummyFactory
             extends BasePooledObjectFactory<Object> {
