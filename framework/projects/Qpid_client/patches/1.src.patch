diff --git a/qpid-jms-client/src/main/java/org/apache/qpid/jms/JmsMessageConsumer.java b/qpid-jms-client/src/main/java/org/apache/qpid/jms/JmsMessageConsumer.java
index a264a7fd..6f72eae2 100644
--- a/qpid-jms-client/src/main/java/org/apache/qpid/jms/JmsMessageConsumer.java
+++ b/qpid-jms-client/src/main/java/org/apache/qpid/jms/JmsMessageConsumer.java
@@ -62,7 +62,7 @@ public class JmsMessageConsumer implements MessageConsumer, JmsMessageAvailableC
     protected final Lock lock = new ReentrantLock();
     protected final AtomicBoolean suspendedConnection = new AtomicBoolean();
     protected final AtomicBoolean delivered = new AtomicBoolean();
-    protected volatile Exception failureCause;
+    protected Exception failureCause;
 
     /**
      * Create a non-durable MessageConsumer
@@ -278,7 +278,7 @@ public class JmsMessageConsumer implements MessageConsumer, JmsMessageAvailableC
                 }
 
                 if (envelope == null) {
-                    if (failureCause != null) {
+                    if (failureCause != null && !messageQueue.isClosed() && timeout == 0) {
                         LOG.debug("{} receive failed: {}", getConsumerId(), failureCause.getMessage());
                         throw JmsExceptionSupport.create(failureCause);
                     }
@@ -289,15 +290,13 @@ public class JmsMessageConsumer implements MessageConsumer, JmsMessageAvailableC
                         timeout = Math.max(deadline - System.currentTimeMillis(), 0);
                     }
 
+                    pullForced = true;
                     //TODO: don't do this if stopped, etc
                     //TODO: make it optional/configurable not to do this at all?
-                    if(timeout >= 0) {
                         // We don't do this for receive with no timeout since it
                         // already occurred for zero-prefetch consumers, and
                         // the rest block indefinitely on the local messageQueue
-                        pullForced = true;
                         performPullIfRequired(timeout, true);
-                    }
                     //TODO: do we need to reset pullForced, if there are e.g expired etc messages received and then filtered after the pull?
 
                     // TODO: refresh credit if needed, since the above drains it.
