diff --git a/cbor/src/main/java/com/fasterxml/jackson/dataformat/cbor/CBORParser.java b/cbor/src/main/java/com/fasterxml/jackson/dataformat/cbor/CBORParser.java
index 23a831b3..6245729b 100644
--- a/cbor/src/main/java/com/fasterxml/jackson/dataformat/cbor/CBORParser.java
+++ b/cbor/src/main/java/com/fasterxml/jackson/dataformat/cbor/CBORParser.java
@@ -754,9 +754,7 @@ public class CBORParser extends ParserMinimalBase
                 return (_currToken = JsonToken.VALUE_TRUE);
             case 22:
                 return (_currToken = JsonToken.VALUE_NULL);
-            case 23:
-                return (_currToken = _decodeUndefinedValue());
                 
             case 25: // 16-bit float... 
                 // As per [http://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript]
                 {
@@ -1232,10 +1229,7 @@ public class CBORParser extends ParserMinimalBase
             case 22:
                 _currToken = JsonToken.VALUE_NULL;
                 return null;
-            case 23:
-                _currToken = _decodeUndefinedValue();
-                return null;
 
             case 25: // 16-bit float... 
                 // As per [http://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript]
                 {
@@ -2895,20 +2888,17 @@ public class CBORParser extends ParserMinimalBase
         return (l1 << 32) + l2;
     }
 
     /**
      * Helper method to encapsulate details of handling of mysterious `undefined` value
      * that is allowed to be used as something encoder could not handle (as per spec),
      * whatever the heck that should be.
      * Current definition for 2.9 is that we will be return {@link JsonToken#VALUE_NULL}, but
      * for later versions it is likely that we will alternatively allow decoding as
      * {@link JsonToken#VALUE_EMBEDDED_OBJECT} with "embedded value" of `null`.
      *
      * @since 2.9.6
      */
-    protected JsonToken _decodeUndefinedValue() throws IOException {
-        return JsonToken.VALUE_NULL;
-    }
 
     /*
     /**********************************************************
     /* Internal methods, UTF8 decoding
