diff --git a/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/GeneratorSimpleTest.java b/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/GeneratorSimpleTest.java
index 662772e1..017f5b37 100644
--- a/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/GeneratorSimpleTest.java
+++ b/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/GeneratorSimpleTest.java
@@ -197,27 +197,6 @@ public class GeneratorSimpleTest extends CBORTestBase
                 (byte) rawL);
     }
 
-    // [dataformats-binary#139]: wrong encoding of BigDecimal
-    public void testBigDecimalValues() throws Exception
-    {
-        ByteArrayOutputStream out = new ByteArrayOutputStream();
-        CBORGenerator gen = cborGenerator(out);
-        final BigDecimal NR = new BigDecimal("273.15");
-        gen.writeNumber(NR);
-        gen.close();
-        byte[] b = out.toByteArray();
-
-        // [https://tools.ietf.org/html/rfc7049#section-2.4.2]
-        final byte[] spec = new byte[] {
-                (byte) 0xC4,  // tag 4
-                (byte) 0x82,  // Array of length 2
-                0x21,  // int -- -2
-                0x19, 0x6a, (byte) 0xb3 // int 27315
-        };
-        assertEquals(spec.length, b.length);
-        Assert.assertArrayEquals(spec, b);
-    }
-    
     public void testEmptyArray() throws Exception
     {
         // First: empty array (2 bytes)
diff --git a/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/parse/ParserNumbersTest.java b/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/parse/ParserNumbersTest.java
index 13cf42ff..2c4214b2 100644
--- a/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/parse/ParserNumbersTest.java
+++ b/cbor/src/test/java/com/fasterxml/jackson/dataformat/cbor/parse/ParserNumbersTest.java
@@ -328,7 +328,7 @@ public class ParserNumbersTest extends CBORTestBase
     }
 
     public void testBigDecimalType() throws IOException {
-        final BigDecimal NR = new BigDecimal("172.125");
+        final BigDecimal NR = new BigDecimal("273.15");
         ByteArrayOutputStream out = new ByteArrayOutputStream();
         CBORGenerator generator = cborGenerator(out);
         generator.writeNumber(NR);
@@ -343,20 +343,7 @@ public class ParserNumbersTest extends CBORTestBase
             assertEquals(NR.intValue(), parser.getIntValue());
             assertNull(parser.nextToken());
         }
-
-        // Almost good. But [dataformats#139] to consider too, see
-        // [https://tools.ietf.org/html/rfc7049#section-2.4.2]
-        final byte[] spec = new byte[] {
-                (byte) 0xC4,  // tag 4
-                (byte) 0x82,  // Array of length 2
-                0x21,  // int -- -2
-                0x19, 0x6a, (byte) 0xb3 // int 27315
-        };
-        try (CBORParser parser = cborParser(spec)) {
-            assertEquals(JsonToken.VALUE_NUMBER_FLOAT, parser.nextToken());
-            assertEquals(NumberType.BIG_DECIMAL, parser.getNumberType());
-            assertEquals(new BigDecimal("273.15"), parser.getDecimalValue());
-            assertNull(parser.nextToken());
-        }
+        // Almost good. But [dataformats#139] to consider too...
+        // ... but that'll need to wait for 2.10
     }
 }
