diff --git a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataContextTest.java b/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataContextTest.java
index 7cb6fb6b..e7acc849 100644
--- a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataContextTest.java
+++ b/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataContextTest.java
@@ -22,8 +22,10 @@ import java.sql.Timestamp;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Calendar;
 import java.util.Date;
 import java.util.List;
+import java.util.TimeZone;
 
 import org.apache.metamodel.UpdateCallback;
 import org.apache.metamodel.UpdateScript;
@@ -49,7 +51,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             System.err.println(getInvalidConfigurationMessage());
             return;
         }
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         Column[] timeColumns = dc.getDefaultSchema().getTableByName("Contact").getTimeBasedColumns();
         assertEquals(
@@ -71,10 +73,6 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
         ds.close();
     }
 
-    private SalesforceDataContext getSalesforceDataContext() {
-        return new SalesforceDataContext(getEndpoint(), getUsername(), getPassword(), getSecurityToken());
-    }
-
     public void testInvalidLoginException() throws Exception {
         try {
             new SalesforceDataContext("foo", "bar", "baz");
@@ -115,7 +113,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             return;
         }
 
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         Schema schema = dc.getDefaultSchema();
 
@@ -154,7 +152,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             return;
         }
 
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         runConversionTest(dc, "Account");
         runConversionTest(dc, "Contact");
@@ -190,7 +188,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             return;
         }
 
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         DataSet ds;
 
@@ -227,7 +225,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             return;
         }
 
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         final String tableName = "Account";
         final String insertedName = "MetaModel TESTER contact";
@@ -305,7 +303,7 @@ public class SalesforceDataContextTest extends SalesforceTestCase {
             return;
         }
 
-        SalesforceDataContext dc = getSalesforceDataContext();
+        SalesforceDataContext dc = new SalesforceDataContext(getUsername(), getPassword(), getSecurityToken());
 
         final String tableName = "Contact";
         final String firstName = "MetaModelJohn";
diff --git a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataSetTest.java b/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataSetTest.java
deleted file mode 100644
index 838e3865..00000000
--- a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceDataSetTest.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/**
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- *   http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.metamodel.salesforce;
-
-import com.sforce.soap.partner.QueryResult;
-import com.sforce.ws.ConnectionException;
-import com.sforce.ws.bind.TypeMapper;
-import com.sforce.ws.parser.PullParserException;
-import com.sforce.ws.parser.XmlInputStream;
-import org.apache.metamodel.data.Row;
-import org.apache.metamodel.schema.Column;
-import org.apache.metamodel.schema.ColumnType;
-import org.apache.metamodel.schema.MutableColumn;
-import org.junit.Test;
-
-import java.io.IOException;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-
-public class SalesforceDataSetTest {
-
-    @Test
-    public void testQuery() throws Exception {
-        QueryResult qr = queryResult("/result/double-value.xml");
-        MutableColumn version = new MutableColumn("Version", ColumnType.DOUBLE);
-
-        SalesforceDataSet dataSet = new SalesforceDataSet(new Column[] { version }, qr, null);
-        List<Row> rows = dataSet.toRows();
-
-        assertEquals(5386.21, rows.get(0).getValue(version));
-        assertEquals(53.0, rows.get(1).getValue(version));
-        
-        dataSet.close();
-    }
-
-    private QueryResult queryResult(String input) throws PullParserException, IOException, ConnectionException {
-        QueryResult queryResult = new QueryResult();
-        XmlInputStream in = new XmlInputStream();
-        in.setInput(getClass().getResourceAsStream(input), "UTF-8");
-        queryResult.load(in, new TypeMapper());
-        return queryResult;
-    }
-}
\ No newline at end of file
diff --git a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceTestCase.java b/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceTestCase.java
index 6b1b8668..039fd615 100644
--- a/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceTestCase.java
+++ b/salesforce/src/test/java/org/apache/metamodel/salesforce/SalesforceTestCase.java
@@ -22,7 +22,6 @@ import java.io.File;
 import java.io.FileReader;
 import java.util.Properties;
 
-import com.sforce.soap.partner.Connector;
 import junit.framework.TestCase;
 
 /**
@@ -34,7 +33,6 @@ public abstract class SalesforceTestCase extends TestCase {
     private String _username;
     private String _password;
     private String _securityToken;
-    private String _endpoint;
     private boolean _configured;
 
     @Override
@@ -48,8 +46,7 @@ public abstract class SalesforceTestCase extends TestCase {
             _username = properties.getProperty("salesforce.username");
             _password = properties.getProperty("salesforce.password");
             _securityToken = properties.getProperty("salesforce.securityToken");
-            _endpoint = properties.getProperty("salesforce.endpoint", Connector.END_POINT);
-
+            
             _configured = (_username != null && !_username.isEmpty());
         } else {
             _configured = false;
@@ -81,9 +78,4 @@ public abstract class SalesforceTestCase extends TestCase {
     public String getSecurityToken() {
         return _securityToken;
     }
-
-    public String getEndpoint() {
-        return _endpoint;
-    }
-
 }
